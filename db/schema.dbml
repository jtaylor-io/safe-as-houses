Table users as U {
  username varchar [pk]
  hashed_password varchar [not null]
  full_name varchar [not null]
  email varchar [unique, not null]
  is_email_verified bool [not null, default: false]
  password_changed_at timestamptz [not null, default: '0001-01-01 00:00:00Z']
  created_at timestamptz [not null, default:`now()`]
}

Table verify_emails {
    id bigserial
    username varchar [ref: > U.username, not null]
    email varchar [not null]
    secret_code varchar [not null]
    is_used bool [not null, default: false] 
    created_at timestamptz [not null, default:`now()`] 
    expired_at timestamptz [not null, default:`now() + interval '15 minutes'`]
}

Table accounts as A {
    id bigserial [pk]
    owner varchar [ref: > U.username, not null]
    balance numeric [not null]
    currency varchar [not null]
    created_at timestamptz [not null, default: `now()`]

    Note: 'Stores Bank Account Data'
    Indexes {
      owner
      (owner, currency) [unique]
    }
}

Table entries {
    id bigserial [pk]
    account_id bigint [ref: > A.id, not null]
    amount numeric [not null, note: 'credit is +ve and debit is -ve']
    created_at timestamptz [not null, default: `now()`]

    Indexes {
        account_id
    }
}

Table transfers {
    id bigserial [pk]
    from_account_id bigint [ref: > A.id, not null]
    to_account_id bigint [ref: > A.id, not null]
    // dbml currently does not support check constraints
    // check contraint to enforce +ve amount value to be added outside of dbml
    amount numeric [not null, note: 'amount must be +ve value']

    Indexes {
        from_account_id
        to_account_id
        (from_account_id, to_account_id)
    }
}

